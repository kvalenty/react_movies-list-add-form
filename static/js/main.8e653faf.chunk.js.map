{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/ErrorMessage/ErrorMessage.js","components/NewMovieInput/NewMovieInput.js","components/NewMovie/NewMovieDefaultState.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","ErrorMessage","props","name","NewMovieInput","valueItem","handleInput","isValidatedInput","type","value","onChange","event","onBlur","placeholder","isValid","NewMovieDefaultState","pattern","RegExp","NewMovie","state","isActiveButton","target","setState","prevState","isValueValidated","Boolean","match","length","hadUnvalidated","Object","values","every","el","onSubmittedMovie","preventDefault","addMovie","this","onSubmit","entries","disabled","Component","App","moviesFromServer","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e653faf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ErrorMessage = props => (\n  <div className=\"invalid-feedback\">\n    {`Please type valid ${props.name}.`}\n  </div>\n);\n\nErrorMessage.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage } from '../ErrorMessage/ErrorMessage';\n\nexport const NewMovieInput = (props) => {\n  const {\n    name,\n    valueItem,\n    handleInput,\n    isValidatedInput,\n  } = props;\n\n  return (\n    <label>\n      <input\n        type=\"text\"\n        value={valueItem.value}\n        name={name}\n        onChange={event => handleInput(event)}\n        onBlur={event => isValidatedInput(event)}\n        placeholder={name}\n        className={\n          `w-100 p-2 form-control ${!valueItem.isValid && 'is-invalid'}`\n        }\n      />\n      <ErrorMessage name={name} />\n    </label>\n  );\n};\n\nNewMovieInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  valueItem: PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    isValid: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleInput: PropTypes.func.isRequired,\n  isValidatedInput: PropTypes.func.isRequired,\n};\n","export const NewMovieDefaultState = {\n  title: {\n    value: '',\n    isValid: true,\n    pattern: new RegExp(/\\w{3,}/, 'g'),\n  },\n  description: {\n    value: '',\n    isValid: true,\n    pattern: new RegExp(/\\w*/, 'g'),\n  },\n  imgUrl: {\n    value: '',\n    isValid: true,\n    // eslint-disable-next-line max-len\n    pattern: new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/, 'g'),\n  },\n  imdbUrl: {\n    value: '',\n    isValid: true,\n    // eslint-disable-next-line max-len\n    pattern: new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/, 'g'),\n  },\n  imdbId: {\n    value: '',\n    isValid: true,\n    pattern: new RegExp(/(tt)[\\d]*/, 'g'),\n  },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewMovieInput } from '../NewMovieInput/NewMovieInput';\nimport { NewMovieDefaultState } from './NewMovieDefaultState';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: NewMovieDefaultState,\n    isActiveButton: false,\n  }\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      movie: {\n        ...prevState.movie,\n        [name]: {\n          ...prevState.movie[name],\n          value,\n        },\n      },\n    }));\n  }\n\n  isValidatedInput = (event) => {\n    const { name } = event.target;\n    const { value, pattern } = this.state.movie[name];\n    const isValueValidated = Boolean((value.match(pattern) || []).length);\n\n    const hadUnvalidated = Object.values(this.state.movie)\n      .every(el => (el.isValid && el.value.length));\n\n    this.setState(prevState => ({\n      ...prevState,\n      isActiveButton: (hadUnvalidated),\n      movie: {\n        ...prevState.movie,\n        [name]: {\n          ...prevState.movie[name],\n          isValid: isValueValidated,\n        },\n      },\n    }));\n  }\n\n  onSubmittedMovie = (event) => {\n    event.preventDefault();\n\n    if (!this.state.isActiveButton) {\n      return;\n    }\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.movie;\n    const { addMovie } = this.props;\n\n    const movie = {\n      title: title.value,\n      description: description.value,\n      imgUrl: imgUrl.value,\n      imdbUrl: imdbUrl.value,\n      imdbId: imdbId.value,\n    };\n\n    addMovie(movie);\n    this.setState({\n      movie: NewMovieDefaultState,\n      isActiveButton: false,\n    });\n  }\n\n  render() {\n    const { isActiveButton } = this.state;\n\n    return (\n      <form\n        onSubmit={event => this.onSubmittedMovie(event)}\n        className=\"p-2 d-flex flex-column justify-content-center\"\n      >\n        {Object.entries(this.state.movie)\n          .map(([key, valueItem]) => (\n            <NewMovieInput\n              key={key}\n              name={key}\n              valueItem={valueItem}\n              handleInput={this.handleInput}\n              isValidatedInput={this.isValidatedInput}\n              isActiveButton={isActiveButton}\n            />\n          ))\n        }\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          disabled={!isActiveButton}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      prevState.movies.push(movie);\n\n      return {\n        movies: [...prevState.movies],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}